# 10진수를 16진수 소문자 형태 문자열로 출력
a = input()
a1 = int(a)

# 10진수를 다른 진수로 바꿔야 하는 이유가 뭘까??
# n에 저장되어 있는 값을 16진수(hexadecimal)소문자 형태 문자열로 출력
# %o로 출력하면 8진수(octal) 문자열로 출력된다.
print('%x' % a1)
print('%o' % a1)

# %X로 출력하면 16진수 대문자 형태 문자열로 출력이 된다.

# 여러가지 진수 변환 방법
b = input()
b1 = int(b, 16)  # 입력된 b를 16진수로 변환하여 n에 저장
print('%o' % b1)  # 16진수 n의 값을 8진수 형태 문자열로 출력

# 문자 -->유니코드로 변환
# 내장함수 ord()를 사용
c = ord(input())
print(c)

'''
ord()는 어떤 문자의 순서 위치(ordinal position)값을 의미한다.
컴퓨터로 저장되고 처리되는 모든 데이터들은 2진수 형태로 정수화 되어야 하는데,
컴퓨터에 문자를 저장하는 방법으로는 아스키코드나 유니코드가 자주 사용된다.
ex) 영어 대문자 'A'는 10진수 값 65로 표현 >>> 2진수 값 1000001로 컴퓨터 내부에 저장됨.
유니코드는 세계 여러 나라의 문자를 공통된 코드 값으로 저장할 때 사용하는 표준 코드이다.
'''

# 정수 --> 문자
# 내장함수 chr()를 사용
d = input(input())
print(chr(d))

'''
java와 다르게 python은 데이터 타입을 명시하지 않는다. 그러므로 입력 값이 
문자/문자열/정수/실수인지를 정확하게 변환시킨 다음에 다음 코드를 진행하는 것이 좋다.
ex) 123이 입려 되어있다고 한다면, 이것은 정수인지, 문자열인지 정확하게 파악하기가 어렵다.
chr()는 정수값을 문자로
ord()는 문자를 정수값 형태로 변환해준다.

좋은습관)
1. 입력된 문자열을 정확하게 잘라낸다(공백,줄바꿈, 구분문자 등으로)
2. 잘라낸 데이터들을 데이터형에 맞게 변환해 변수에 저장한다.
3. 값을 저장했다가 다시 사용하기 위해, 변수를 이용해 값을 저장하고, 변수를 이용해 계산을 한다,
4. 원하는 결과 값을 필요한 형태로 출력한다(공백,줄바꿈,구분자 등)

'''

# 문자 1개마다 아스키문자표에 10진수로 표현이 되어있다.
# 그렇기 때문에 만약 입력 받은 값에 +1을 하게 될 경우 그 다음 문자를 의미한다.
# ex) A 아스키문자표 65, +1 = 66인데 B의 아스키코드가 66이다.
e = ord(input())
print(chr(e+1))

"""
문자열 만들기 
1.서식 지정자로 문자열을 만드는 방법
2. format메서드로 문자열을 만드는 문자열 포매팅
3. f문자열 포매팅 (파이썬 3.6버전부터는 f 문자열 포매팅 기능을 사용 가능)

1-1)서식 지정자
- '%d'% 정수 지정
- '%s'% '문자열'
- '%f'%  실수
- '%.자리수f'% 숫자

1-2) 문자열 포매팅
- ' {인덱스}.format(값)
- '{0} {2} {1}. format(값1, 값2, 값3) 만약 {}에서 인덱스를 생략하면 format에 지정한 순서대로 값이 들어간다.
- '{a} {b} {c} .format(a = 값, b= 값, c =값)

1-3) f문자열 포매팅
ex)  age = 30
       f '나는 내년이면 {age + 1}살이 된다. ---> 나는 내년이면 31살이 된다.
"""



